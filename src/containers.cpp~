#include "containers.h"

void container :: InitialiseInv()
{
  for (int x=0;x<3;x++)
    {
      for (int y=0;y<3;y++)
	{
	  this->inv[y][x] = new invItem(inv_item_library[no_item]);
	}
    }
}

int container :: AddItem(item* i)
{
  invItem* thisItem = ToInvItem(i);

  for (int x=0; x<3; x++)
    {
      for (int y=0; y<3; y++)
	{
	  if (inv[y][x]->name == inv_item_library[no_item].name)
	    {
	      inv[y][x] = thisItem;
	      return 0;
	    }
	}
    }
  return 1;
}

void container :: ReplaceItem(int x, int y, item* i)
{
  invItem* thisItem = ToInvItem(i);

  inv[y][x] = thisItem;
}

item* container :: RemoveItem(int x, int y)
{
  item* thisItem = ToItem(inv[y][x]);
  
  inv[y][x] = new invItem(inv_item_library[no_item]);
  
  return thisItem;
}

item* container :: GetItem(int x, int y)
{
  item* i = ToItem(inv[y][x]);
  return i;
}

void area :: InitialiseInv()
{
  for (int x=0;x<3;x++)
    {
      for (int y=0;y<3;y++)
	{
	  this->inv[y][x] = new item(item_library[no_item]);
	}
    }
}

int area :: AddItem(item* i)
{
  for (int x=0; x<3; x++)
    {
      for (int y=0; y<3; y++)
	{
	  if (inv[y][x]->name == inv_item_library[no_item].name)
	    {
	      inv[y][x] = i;
	      return 0;
	    }
	}
    }
  return 1;
}

void area :: ReplaceItem(int x, int y, item* i)
{
  inv[y][x] = i;
}

item* area :: RemoveItem(int x, int y)
{
  item* thisItem = inv[y][x];
  inv[y][x] = new item(item_library[no_item]);
  return thisItem;
}

item* area :: GetItem(int x, int y)
{
  return inv[y][x];
}

item* ToItem(invItem* i)
{
  int id = i->id;
  std::string name = i->name;
  const char* symbol = i->symbol;
  int colour = i->colour;
  int value=i->value;
  bool lootable=i->lootable;
  
  item* thisItem = new item (id,name,symbol,colour,value,lootable);
  
  return thisItem;
} 

invItem* ToInvItem(item* i)
{
  int id = i->id;
  std::string name = i->name;
  const char* symbol = i->symbol;
  int colour = i->colour;
  int value=i->value;
  bool lootable=i->lootable;
  
  invItem* thisItem = new invItem (id,name,symbol,colour,value,lootable);
  
  return thisItem;
} 
 
